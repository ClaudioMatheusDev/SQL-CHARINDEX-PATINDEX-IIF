# üìå Exerc√≠cios de SQL - CHARINDEX, PATINDEX e IIF

Este reposit√≥rio cont√©m exerc√≠cios pr√°ticos para treinar fun√ß√µes SQL no SQL Server, incluindo `CHARINDEX`, `PATINDEX` e `IIF`.

## üìã Sobre os Exerc√≠cios
Os exerc√≠cios est√£o organizados para ajudar a entender e praticar:

- üîç **CHARINDEX**: Localiza a posi√ß√£o de uma string dentro de outra.
- üîç **PATINDEX**: Encontra padr√µes dentro de um texto utilizando express√µes como `%` e `[...]`.
- ‚úÖ **IIF**: Avalia√ß√£o condicional simples, semelhante ao `IF-ELSE`.

Cada exerc√≠cio prop√µe uma consulta SQL que pode ser executada no SQL Server.

## üìÇ Estrutura das Tabelas
Antes de iniciar os exerc√≠cios, crie as seguintes tabelas no seu banco de dados:

```sql
CREATE TABLE clientes (
    id_cliente INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100),
    email VARCHAR(100),
    telefone VARCHAR(20),
    gasto_total DECIMAL(10,2)
);

CREATE TABLE produtos (
    id_produto INT PRIMARY KEY IDENTITY(1,1),
    nome_produto VARCHAR(100),
    descricao TEXT,
    quantidade INT,
    preco DECIMAL(10,2)
);

CREATE TABLE pedidos (
    id_pedido INT PRIMARY KEY IDENTITY(1,1),
    id_cliente INT FOREIGN KEY REFERENCES clientes(id_cliente),
    data_pedido DATE,
    data_entrega DATE,
    valor_total DECIMAL(10,2),
    valor_pago DECIMAL(10,2)
);
```

## üîπ Populando as Tabelas
Antes de executar as queries, insira alguns dados de exemplo:

```sql
INSERT INTO clientes (nome, email, telefone, gasto_total) VALUES
('Carlos Silva', 'carlos.silva@gmail.com', '(11) 98765-4321', 1200.50),
('Mariana Costa', 'mariana.costa@yahoo.com', '(21) 99876-5432', 800.75),
('Roberto Souza', 'roberto.souza@gmail.com', '(31) 91234-5678', 1500.00),
('Ana Oliveira', 'ana.oliveira@outlook.com', '(41) 93456-7890', 300.40),
('Fernanda Lima', 'fernanda.lima@gmail.com', '(51) 92345-6789', 2200.00);
```

```sql
INSERT INTO produtos (nome_produto, descricao, quantidade, preco) VALUES
('Notebook Dell', 'Notebook Dell i7 com SSD - Promo√ß√£o', 10, 4500.99),
('Mouse Gamer', 'Mouse √≥ptico RGB para jogos', 25, 150.50),
('Teclado Mec√¢nico', 'Teclado mec√¢nico com LED azul', 15, 350.00),
('Monitor 24"', 'Monitor Full HD 24 polegadas - Promo√ß√£o', 8, 799.90),
('Cadeira Gamer', 'Cadeira ergon√¥mica para jogos', 5, 1200.00);
```

```sql
INSERT INTO pedidos (id_cliente, data_pedido, data_entrega, valor_total, valor_pago) VALUES
(1, '2025-03-01', '2025-03-10', 4500.99, 4500.99),
(2, '2025-03-05', '2025-03-15', 800.75, 400.00),
(3, '2025-03-08', '2025-03-18', 1500.00, 1500.00),
(4, '2025-03-10', '2025-03-20', 300.40, 300.40),
(5, '2025-03-12', '2025-03-22', 2200.00, 1000.00);
```

## üìù Exerc√≠cios

### üìå Exerc√≠cios com `CHARINDEX`
1. Encontrar a posi√ß√£o do caractere `'@'` nos e-mails da tabela `clientes`.
2. Extrair o nome do usu√°rio do e-mail antes do `'@'` na tabela `clientes`.
3. Descobrir a posi√ß√£o do primeiro tra√ßo `'-'` em n√∫meros de telefone na tabela `clientes`.

### üìå Exerc√≠cios com `PATINDEX`
4. Encontrar a posi√ß√£o da palavra `'Promo√ß√£o'` na coluna `descricao` da tabela `produtos`.
5. Verificar se um telefone segue um padr√£o espec√≠fico (exemplo: `'(99) 9999-9999'`) na tabela `clientes`.
6. Encontrar produtos onde a descri√ß√£o come√ßa com um n√∫mero na tabela `produtos`.

### üìå Exerc√≠cios com `IIF`
7. Classificar clientes como `'VIP'` se `gasto_total > 1000`, sen√£o `'Comum'` na tabela `clientes`.
8. Verificar estoque cr√≠tico: se `quantidade` for menor que 5, retornar `'Estoque Baixo'`, sen√£o `'Estoque Ok'` na tabela `produtos`.
9. Verificar status de pagamento: se `valor_pago >= valor_total`, exibir `'Pago'`, sen√£o `'Pendente'` na tabela `pedidos`.
10. Verificar se um pedido est√° atrasado: se `data_entrega < GETDATE()`, retornar `'Atrasado'`, sen√£o `'No Prazo'` na tabela `pedidos`.

### üöÄ Desafio Final
Crie um relat√≥rio que:
- Exiba o primeiro nome do cliente extra√≠do do campo `nome`.
- Indique se o cliente √© `'VIP'` ou `'Comum'` com base no `gasto_total`.
- Verifique se o e-mail cont√©m `'gmail'` usando `PATINDEX`.

